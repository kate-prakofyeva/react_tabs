{"version":3,"sources":["helpers/getCurrentTab.ts","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["getCurrentTab","tabs","selectedTabId","find","tab","id","Tabs","_ref","onTabSelected","currentTab","_jsxs","children","_jsx","className","map","href","concat","onClick","handleClick","title","content","App","setSelectedTabId","useState","ReactDOM","render","document","getElementById"],"mappings":"gLAEO,MAAMA,EAAgBA,CAACC,EAAYC,IACjCD,EAAKE,MAAKC,GAAOA,EAAIC,KAAOH,KAAkBD,EAAK,G,WCMrD,MAAMK,EAAOC,IAEN,IAFO,KACnBN,EAAI,cAAEC,EAAa,cAAEM,GACfD,EACN,MAAME,EAAaT,EAAcC,EAAMC,GAQvC,OACEQ,eAAA,OAAK,UAAQ,gBAAeC,SAAA,CAC1BC,cAAA,OAAKC,UAAU,gBAAeF,SAC5BC,cAAA,MAAAD,SACGV,EAAKa,KAAKV,GACTQ,cAAA,MACEC,UAAWJ,EAAWJ,KAAOD,EAAIC,GAAK,YAAc,GACpD,UAAQ,MAAKM,SAGbC,cAAA,KACEG,KAAI,IAAAC,OAAMZ,EAAIC,IACd,UAAQ,UACRY,QAASA,KAnBFb,KACfA,EAAIC,KAAOH,GACbM,EAAcJ,IAkBFc,CAAYd,IACZO,SAEDP,EAAIe,SATFf,EAAIC,UAgBjBO,cAAA,OAAKC,UAAU,QAAQ,UAAQ,aAAYF,SACxCF,EAAWW,cCrCPnB,EAAO,CAClB,CAAEI,GAAI,QAASc,MAAO,QAASC,QAAS,eACxC,CAAEf,GAAI,QAASc,MAAO,QAASC,QAAS,eACxC,CAAEf,GAAI,QAASc,MAAO,QAASC,QAAS,gBAG7BC,EAAgBA,KAC3B,MAAOnB,EAAeoB,GAAoBC,mBAAStB,EAAK,GAAGI,IAM3D,OACEK,eAAA,OAAKG,UAAU,UAASF,SAAA,CACtBC,cAAA,MAAIC,UAAU,QAAOF,SAAA,mBAAAK,OACChB,EAAcC,EAAMC,GAAeiB,SAEzDP,cAACN,EAAI,CACHL,KAAMA,EACNC,cAAeA,EACfM,cAZiBJ,IACrBkB,EAAiBlB,EAAIC,WCfzBmB,IAASC,OAAOb,cAACS,EAAG,IAAKK,SAASC,eAAe,W","file":"static/js/main.b1a17f29.chunk.js","sourcesContent":["import { Tab } from '../types';\n\nexport const getCurrentTab = (tabs:Tab[], selectedTabId:string) => {\n  return tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n};\n","import { getCurrentTab } from '../../helpers';\nimport { Tab } from '../../types';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab:Tab) => void;\n};\n\nexport const Tabs = ({\n  tabs, selectedTabId, onTabSelected,\n}: Props) => {\n  const currentTab = getCurrentTab(tabs, selectedTabId);\n\n  const handleClick = (tab:Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              className={currentTab.id === tab.id ? 'is-active' : ''}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  handleClick(tab);\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Tab } from './types';\nimport { getCurrentTab } from './helpers';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${getCurrentTab(tabs, selectedTabId).title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}